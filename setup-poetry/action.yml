name: Set up Poetry
description: >
  Sets up Poetry, assuming Python is already set up.
inputs:
  version:
    description: The version of Poetry to install.
    required: true
outputs:
  python-path:
    description: The path to Python in the virtual environment.
    value: ${{ steps.code.outputs.python }}
  poetry-path:
    description: The path to the Poetry environment root.
    value: ${{ steps.code.outputs.poetry }}

runs:
  using: composite
  steps:
    - name: Install poetry
      shell: bash
      id: ver
      run: |
        pipx install poetry==$VERSION
        python $GITHUB_ACTION_PATH/ver.py >> $GITHUB_OUTPUT
      env:
        VERSION: ${{ inputs.version }}
    - name: Reconfigure python installation
      uses: actions/setup-python@v5
      with:
        python-version: ${{ steps.ver.outputs.py }}
        cache: poetry
    - name: Upgrade basic installation tools
      shell: bash
      run: |
        poetry run python -m ensurepip --upgrade
        poetry run python -m pip install -U pip setuptools wheel
    - name: Configure poetry and report configuration for downstream
      shell: bash
      id: code
      run: |
        poetry config virtualenvs.in-project true
        poetry config installer.modern-installation false
        if [ "$ON_WIN" = "yes" ]; then
          poetry config installer.max-workers 1
        fi
        poetry run python $GITHUB_ACTION_PATH/paths.py >> $GITHUB_OUTPUT
      env:
        SEP: ${{ runner.os == 'Windows' && '\' || '/' }}
        LOC: ${{ runner.os == 'Windows' && 'Scripts' || 'bin' }}
        SUFFIX: ${{ runner.os == 'Windows' && '.exe' || '' }}
        ON_WIN: ${{ runner.os == 'Windows' && 'yes' || 'no' }}