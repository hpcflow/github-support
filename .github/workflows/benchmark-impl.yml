name: ⚙️ Benchmark

env:
  POETRY_VERSION: "1.4"

on:
  workflow_call: # This is a component workflow
    inputs:
      python:
        required: true
        type: string
        description: >
          Which Pythons to use, as a string or JSON array of strings (the version IDs).
      num_elements:
        required: true
        type: string
        description: >
          How many elements to make in the workflow, as a number or JSON array of numbers.
      platform:
        required: true
        type: string
        description: >
          Which OS to use, as a string or JSON array of strings (the runner IDs).
      executable_name:
        required: true
        type: string
        description: Template parameter.
      benchmark_make_workflow:
        required: true
        type: string
        description: Template parameter
      ref:
        required: true
        type: string
        description: The github.ref

jobs:
  make:
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJSON(inputs.python)}}
        os: ${{ fromJSON(inputs.platform)}}
        num_elements: ${{ fromJSON(inputs.num_elements)}}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: hpcflow/github-support/setup-poetry@0.1
        with:
          version: ${{ env.POETRY_VERSION }}
      - uses: hpcflow/github-support/init-cache@0.1
        with:
          name: benchmark
          version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          poetry install --without dev,pyinstaller

      - name: Set up variables
        id: vars
        run: |
          echo "timeit=benchmark_make_workflow_${{ matrix.num_elements }}_elements-${{ runner.os }}-py-${{ matrix.python-version }}.txt" >> $GITHUB_OUTPUT

      - name: Run app make workflow command
        run: |
          poetry run ${{ inputs.executable_name }} --timeit-file $TIMEIT_FILE make ${{ inputs.benchmark_make_workflow }} --var N $N_ELEMS
        env:
          TIMEIT_FILE: ${{ steps.vars.outputs.timeit }}
          N_ELEMS: ${{ matrix.num_elements }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.vars.outputs.timeit }}
          path: ${{ steps.vars.outputs.timeit }}

  upload:
    needs: make
    runs-on: ubuntu-latest
    steps:
      - run: |
          mkdir benchmarks
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: benchmarks
      - uses: actions/upload-artifact@v4
        with:
          name: benchmarks
          path: benchmarks
